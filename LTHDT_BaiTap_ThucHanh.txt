BÀI TẬP THỰC HÀNH
MÔN LẬP TRÌNH HƯỚNG ĐỐI TƯỢNG

*PHẦN I: NGÔN NGỮ C++
Bài 01(lthdtbai01.cpp): Tính diện tích và chu vi hình tam giác có 3 cạnh a,b,c. Ba cạnh a,b,c đọc vào
từ tệp văn bản "tamgiac.txt". Đưa kết quả ra màn hình, đồng thời ghi ra tệp văn bản "ketqua-lthdtbai01.txt".

Bài 02(lthdtbai02.cpp): Tính gần đúng sinx với độ chính xác 10^-4 theo công thức sau:
sinx = x - x^3/3! + x^5/5! + ... + (-1)^n * x^(2*n+1)/(2*n+1)! + ...

Bài 03(lthdtbai03.cpp): Cho tệp văn bản chứa dãy số nguyên dương a1,a2,a3...,an.
Đọc vào dãy số, đưa các số lẻ về đầu dãy, các số chẵn về cuối dãy.
Ghi dãy số sau khi thay đổi ra tệp "ketqua-lthdtbai03.txt". Y/c sử dụng mạng động chứa dãy số.

Bài 04(lthdtbai04.cpp): Tính tổng 2 ma trận nguyên có kích thước mxn, Cmxn = Amxn + Bmxn.
Đưa các ma trận ra màn hình theo định dạng hàng, cột. Y/c sử dụng mảng động
chứa các ma trận. Các ma trận đọc vào từ tệp văn bản: "matran-A.txt" và "matran-B.txt".

Bài 05(lthdtbai05.cpp): Nhập vào xâu ký tự số nhị phân có tối đa 16 bit.
Tính và đưa ra giá trị của số nhị phân đó. Y/c sử dụng biến xâu động.

Bài 06(lthdtbai06.cpp): Nhập vào một số nguyên dương.
Đưa ra màn hình xâu ký tự số hex. Y/c sử dụng biến xâu động.

Bài 07(lthdtbai07.cpp): Nhập vào xâu ký tự số nhị phân.
Đưa ra màn hình xâu ký tự số hex. Y/c sử dụng biến xâu động.

Bài 08(lthdtbai08.cpp):Tìm USCLN của hai số nguyên dương.
Y/c viết hàm tìm và trả về USCLN của hai số nguyên dương.

Bài 09(lthdtbai09.cpp):Sắp xếp danh sách n họ tên theo vần ABC,
nếu trùng tên thì sắp xếp theo họ, nếu trùng cả họ thì sắp xếp theo tên đệm.
Danh sách họ tên đọc vào từ tệp văn bản "dsten.txt", danh sách tên đã sắp xếp ghi ra
tệp văn bản "ketqua-lthdtbai09.txt". Y/c viết 1 hàm đưa ra danh sách tên, 1 hàm sắp xếp danh sách
tên, 1 hàm tách tên, 1 hàm tách họ đệm và 1 hàm hoán đổi nội dung 2 biến xâu chứa tên.

Bài 10(lthdtbai10.cpp):Nhập vào một danh sách n mặt hàng; mỗi mặt hàng
có tên hàng, số lượng, đơn giá.Tính tổng tiền của n mặt hàng.
Y/c viết hàm nhận vào danh sách n mặt hàng, tính và trả về tổng tiền.

Bài 11(lthdtbai11.cpp):Đọc dãy số nguyên có n phần tử từ tệp văn bản 'daysonguyen.txt' vào mảng động.
Sắp xếp dãy số giảm dần theo giải thuật sủi bọt. Y/c viết 1 hàm sắp xếp dãy số giảm dần,
1 hàm hoán đổi nội dung 2 ô nhớ và 1 hàm đưa dãy số trong mảng ra màn hình.

Bài 12(lthdtbai12.cpp):Chuyển đổi xâu số nhị phân thành xâu số hex tương ứng.
Y/c viết hàm nhận vào xâu số nhị phân và trả về xâu số hex.

Bài 13(lthdtbai13.cpp):Cho 2 dãy số nguyên đã sắp xếp tăng dần a1,a2,...,an và
b1,b2,...,bn. Hai dãy số đọc vào từ tệp văn bản. Viết hàm nhận vào 2 dãy số này, trộn 2 dãy số và trả về
dãy số kết quả. Y/c dùng mảng động.

Bài 14(lthdtbai14.cpp):Nhân 2 ma trận nguyên: Cmxn = Amxp x Bpxn.
Yêu cầu: Viết 1 hàm đọc vào ma trận từ tệp; 1 hàm đưa ma trận ra màn hình theo định dạng hàng,cột; 1 hàm nhân 2 ma trận và trả về ma trận tích;
sử dụng mảng động lưu trữ ma trận. Các ma trận đọc vào từ tệp văn bản: 'matran-A.txt' và 'matran-B.txt'. Ma trận Cmxn ghi ra tệp văn bản 'matran-C.txt'
với cấu trúc: hàng đầu tiên chứa m và n, hàng thứ 2 trở đi lần lượt chứa các hàng của ma trận.

*PHẦN II: LẬP TRÌNH HƯỚNG ĐỐI TƯỢNG
Bài 15(lthdtbai15.cpp): Tính diện tích và chu vi hình tam giác có 3 cạnh a,b,c. Ba cạnh a,b,c có thể nhập vào
từ bàn phím hoặc từ tệp văn bản.

Bài 16(lthdtbai16.cpp): Đọc vào bán kính và màu nền (Xanh, Đỏ, Tím, Vàng) của n hình tròn
từ tệp văn bản "hinhtron.txt". Đưa ra màn hình bán kính, màu nền, diện tích và chu vi
của các hình tròn. Tính tổng diện tích và chu vi của n hình tròn.
Đếm số lượng hình tròn có nền màu Xanh, Đỏ, Tím, Vàng.

Bài 17(lthdtbai17.cpp): Mô phỏng hoạt động đơn giản của một chiếc TV. TV có các trạng thái là
tắt(nguồn), bật(nguồn), chờ(standby), đang xem, kênh đang xem. Dùng điều khiển từ xa có thể:
    1)Bật TV để chuyển từ trạng thái "chờ" sang "đang xem" và sẽ chọn kênh trước đó hoặc mặc định là VTV1;
    2)Chọn kênh để xem (VTV1, VTV2, VTV3, VTC1, VTC6), khi chọn kênh sẽ hiện ra tên đài truyền hình;
    3)Tắt TV để chuyển trạng thái từ đang xem sang "chờ".
Tạo giao diện chương trình để thực hiện ba điều khiển TV trên.

Bài 18(lthdtbai18.cpp): Tính tổng 2 phân số, đưa các phân số ra màn hình ở dạng chưa rút gọn
và đã rút gọn.

Bài 19(lthdtbai19.cpp): Cho điểm A(x1,y1) và điểm B(x2,y2). Tính khoảng cách AB.

Bài 20(lthdtbai20.cpp): Cho ma trận nguyên Amxn. Tính tổng và trung bình cộng
các phần tử của ma trận. Đưa ra ma trận chuyển vị của A. Ma trận Amxn đọc từ tệp văn bản "matran.txt".

Bài 21(lthdtbai21.cpp): Tính tổng 2 ma trận nguyên: Cmxn = Amxn + Bmxn. Ma trận Amxn để trong
tệp văn bản 'matran-A.txt', ma trận Bmxn để trong tệp văn bản 'matran-B.txt'.
Đưa các ma trận ra màn hình theo định dạng hàng, cột.

Bài 22(lthdtbai22.cpp): Tính tích 2 ma trận nguyên: Cmxn = Amxp * Bpxn. Ma trận Amxp để trong
tệp văn bản 'matran-A.txt', ma trận Bpxn để trong tệp văn bản 'matran-B.txt'. 
Đưa các ma trận ra màn hình theo định dạng hàng, cột.

Bài 23(lthdtbai23.cpp): Nhập vào một danh sách n mặt hàng; mỗi mặt hàng có tên hàng, số lượng, đơn giá.
Tính tổng tiền của n mặt hàng.

Bài 24(lthdtbai24.cpp): Nhập vào xâu ký tự số nhị phân có tối đa 16 bit.
Tính và đưa ra giá trị của số nhị phân đó. Đưa ra màn hình số hex tương ứng với số nhị phân.

Bài 25(lthdtbai25.cpp): Viết chương trình nhập vào một thời gian có giờ và phút.
Tính và đưa ra màn hình thời gian sau n phút nhập vào từ bàn phím.

Bài 26(lthdtbai26.cpp): Viết chương trình nhập vào n số phức. Đưa các số phức đã nhập ra màn hình.
Yêu cầu trong chương trình phải tạo đối tượng động.

Bài 27(lthdtbai27.cpp): Viết chương trình nhập vào danh sách n sinh viên,
mỗi sinh viên có thông tin về mã sinh viên, tên và điểm tbc.
Mã SV là các số nguyên được lấy tự động có giá trị từ 11 trở đi.
Đưa ra màn hình số lượng (không dùng n) và danh sách sinh viên đã nhập.
Yêu cầu trong chương trình có sử dụng biến tĩnh và hàm tĩnh;
sử dụng mảng đối tượng động.

Bài 28(lthdtbai28.cpp): Nhập vào một số nguyên dương, đưa ra số nhị phân tương ứng.
Y/c trong chương trình có sử dụng ngăn xếp để chuyển từ số thập phân sang nhị phân.
Ngăn xếp sử dụng cấu trúc lưu trữ kế tiếp.

Bài 29(lthdtbai29.cpp): Nhập vào một số nguyên dương, đưa ra số hex tương ứng.
Y/c trong chương trình có sử dụng ngăn xếp để chuyển từ số thập phân sang hex.
Ngăn xếp sử dụng cấu trúc lưu trữ phân tán.

Bài 30(lthdtbai30.cpp): Đọc vào một dãy số nguyên từ tệp văn bản, trong đó có cả số dương và số âm.
Sử dụng hàng đợi lưu trữ kế tiếp theo kiểu quay vòng để tách, đưa ra màn hình đồng thời
ghi ra tệp văn bản dãy các số dương và dãy các số âm.

Bài 31(lthdtbai31.cpp): Cho tệp văn bản "lthdtbai31-daysonguyen.txt" chứa một dãy số nguyên,
trên tệp không có thông tin về số lượng số. Đọc từng số của dãy số từ tệp,
nếu là số nguyên tố thì đưa vào hàng đợi. Đưa ra màn hình dãy số đọc từ tệp và
dãy số nguyên tố trong hàng đợi. Yêu cầu cài đặt và sử dụng hàng đợi lưu trữ phân tán.

Bài 32(lthdtbai32.cpp): Cho tệp văn bản chứa dãy số nguyên "lthdtbai32-daysonguyen.txt",
trên tệp không có thông tin về số phần tử của dãy số. Đọc dãy số từ tệp văn bản,
lưu dãy số trong danh sách liên kết đơn theo đúng thứ tự trên tệp. Đưa dãy số trong DSLKD ra màn hình.
Tìm xem trong dãy số có phần tử nào bằng x không. Xóa một phần tử có giá trị bằng x.

Bài 33(lthdtbai33.cpp): Sử dụng danh sách liên kết đơn P để lưu trữ dãy số nguyên
theo thứ tự đọc vào từ tệp văn bản 'daysonguyen.txt', trên tệp không có thông tin
về số phần tử của dãy số. Tạo danh sách liên kết đơn Q bao gồm các phần tử dữ liệu của P
nhưng theo thứ tự đảo ngược. Xóa một nút trên DSLK đơn P mà có phần tử dữ liệu bằng
x nhập vào từ bàn phím. Đưa ra màn hình dãy số nguyên trong danh sách liên kết đơn.

Bài 34(lthdtbai34.cpp): Đọc vào một dãy số nguyên từ tệp văn bản.
Lưu dãy số trong danh sách liên kết kép (DSLKK) theo thứ tự giống như trên tệp.
Đưa dãy số trong DSLKK ra màn hình theo thứ tự từ trái sang phải và từ phải sang trái.
Cho biết số phần tử có trong DSLKK. Chèn phần tử x vào đầu danh sách.
Xóa nút có phần tử bằng x. Tìm nút có phần tử bằng x.

Bài 35(lthdtbai35.cpp): Đọc danh sách n mặt hàng từ tệp văn bản 'mathang.txt', lưu vào
danh sách liên kết kép (DSLKK), mỗi mặt hàng có thông tin về mã hàng, tên hàng, số lượng, đơn giá.
Đưa danh sách mặt hàng ra màn hình kèm theo số tiền của từng mặt hàng. Tính tổng số tiền của tất cả mặt hàng.
Xóa mặt hàng có mã nhập vào từ bàn phím.

Bài 36(lthdtbai36.cpp): Tính tổng n số phức. Yêu cầu dùng toán tử + để cộng hai số phức,
dùng toán tử nhập >> nhập vào số phức, dùng toán tử xuất << để đưa ra số phức ở dạng a + bi,
có thể khởi tạo giá trị ban đầu cho phần thực và phần ảo.

Bài 37(lthdtbai37.cpp): Tạo lớp đối tượng xâu ký tự có các đặc điểm giống như xâu ký tự
trong Pascal: Có thể khởi tạo đối tượng xâu bằng một hằng xâu; có thể gán hằng xâu hoặc
đối tượng xâu cho đối tượng xâu; có thể dùng phép toán + để nối xâu; có thể dùng các
phép toán so sánh để so sánh xâu; có thể dùng cin và cout để nhập vào và đưa ra đối tượng xâu. 

Bài 38(lthdtbai38.cpp): Xây dựng kiểu mảng động an toàn có các đặc điểm sau:
- Có thể xác định kiểu phần tử khi tạo mảng;
- Kích thước mặc định là 50;
- Có thể xác định kích thước khi tạo mảng;
- Có thể truy nhập trực tiếp các phần tử bằng toán tử [] và kiểm tra được sự hợp lệ
của chỉ số truy nhập;
- Có thể gán một khoảng liên tục các phần tử của mảng này cho mảng khác;
- Có thể gán mảng cho mảng;
- Có thể dùng toán tử + để nối một mảng vào cuối mảng khác;
- Từ bên ngoài có thể biết được số phần tử (kích thước mảng) hiện đang chứa trong mảng.

Bài 39(lthdtbai39.cpp): Một nhân sự luôn có họ tên và ngày sinh.
Sinh viên là một loại nhân sự có thêm mã sinh viên và điểm tbc.
Nhập vào thông tin của một sinh viên. Đưa ra màn hình các thông tin về sinh viên có kèm theo
đánh gia, nếu điểm TBC >=8.0 thì đánh giá là sinh viên giỏi.

Bài 40(lthdtbai40.cpp): Một nhân sự nói chung có họ tên và ngày sinh. Nhân viên trong
một công ty là một loại nhân sự nhưng có thêm mã nhân viên và hệ số lương. Lãnh đạo
trong công ty là một loại nhân viên có thêm chức vụ. Nhập vào thông tin của một số nhân viên
và lãnh đạo trong công ty. Đưa ra các thông tin đã nhập.

Bài 41(lthdtbai41.cpp): Thời điểm là một loại ngày tháng và cũng là một loại thời gian
nhưng có thêm địa điểm. Ngày tháng có ngày, tháng, năm. Thời gian có giờ và phút. Nhập vào một thời điểm,
đưa ra địa điểm, ngày và thời gian của thời điểm đó ở dạng Địa điểm, ngày dd/mm/yy - h:mm.
Ví dụ: Hà Nội, ngày 22/04/19 - 9:30.

Bài 42(lthdtbai42.cpp): Tính diện tích và chu vi các hình: Hình chữ nhật biết 2 cạnh,
hình tam giác biết 3 cạnh, hình tròn biết bán kính. Nhập vào một số hình trong đó
có cả hình chữ nhật, hình tam giác và hình tròn. Đưa ra diện tích
và chu vi các hình đã nhập. Y/c cài đặt đa hình động và lớp trừu tượng; viết 1 hàm
lựa chọn hình, nhập kích thước cho hình và trả về hình đã nhập; viết 1 hàm đưa ra
diện tích và chu vi của một hình truyền vào qua đối số.

Bài 43(lthdtbai43.cpp): Viết chương trình quản lý nhân sự của một trường học;
nhân sự gồm có giảng viên và sinh viên; giảng viên có mã gv, họ tên và số bài báo;
sinh viên có mã sv, họ tên và điểm tbc. Nhập vào một số nhân sự trong đó có cả giảng viên
và sinh viên. Đưa ra thông tin của các nhân sự đã nhập kèm theo đánh giá:
giảng viên đánh giá là giỏi nếu số bài báo >=5, sinh viên đánh giá là giỏi
nếu điểm TBC>=8.0. Y/c cài đặt đa hình động.

Bài 44(lthdtbai44.cpp): Sử dụng cây nhị phân lưu trữ phân tán để chuyển biểu thức
trung tố có dấu ngoặc đầy đủ sang dạng tiền tố và hậu tố. Biểu thức trung tố đọc vào từ tệp văn bản.
Ví dụ: biểu thức trung tố có dấu ngoặc đầy đủ là: ((a*2) + ((b-c)/d)).
Đưa ra dạng tiền tố là: + * a 2 / - b c d
và dạng hậu tố là: a 2 * b c - d / +

Bài 45(lthdtbai45.cpp): Cho đồ thị vô hướng, không trọng số có n đỉnh là các số nguyên từ 1 đến n.
Cài đặt cấu trúc đồ thị lưu trữ phân tán và phép toán duyệt đồ thị theo chiều rộng.
Cho tệp văn bản 'dothi.txt' chứa nội dung như dưới đây. Đọc đồ thị từ tệp.
Đưa ra thứ tự các đỉnh được thăm khi duyệt đồ thị theo chiều rộng bắt đầu từ đỉnh 3.
1: 2,5,6
2: 1,3,5
3: 2,5
4: 6
5: 1,2,3,6
6: 1,4,5

------HẾT------
